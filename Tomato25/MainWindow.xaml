<Window x:Class="Tomato25.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Tomato25"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        Name="Window"
        Title="Tomato25"
        MinWidth="180"
        MinHeight="50"
        Width="180"
        Height="50"
        d:DataContext="{d:DesignInstance Type=local:MainModel,
                                         IsDesignTimeCreatable=True}"
        x:ClassModifier="internal"
        AllowsTransparency="True"
        Closing="Window_Closing"
        Icon="Icons/Tomato.ico"
        Loaded="Window_Loaded"
        LocationChanged="Window_LocationChanged"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        Opacity="{qc:Binding '$P ? 1: 0.6',
                             P={Binding IsMouseOver,
                                        ElementName=Window}}"
        ResizeMode="CanResizeWithGrip"
        ShowInTaskbar="False"
        SizeChanged="Window_SizeChanged"
        StateChanged="Window_StateChanged"
        Topmost="True"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        mc:Ignorable="d">
    <Grid>
        <ProgressBar Background="Transparent"
                     BorderThickness="0"
                     Maximum="1"
                     Minimum="0"
                     Opacity="0.3"
                     Value="{Binding Progress,
                                     Mode=OneWay}" />
        <Viewbox>
            <TextBlock Margin="0,-3"
                       FontFamily="Calibri"
                       FontWeight="Bold"
                       Text="{qc:Binding '$P.ToString(\'mm\\ \\:\\ ss\')',
                                         P={Binding Time}}"
                       Visibility="{qc:Binding '$P== Mode.Inactive ? Visibility.Collapsed : Visibility.Visible',
                                               P={Binding Mode}}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}"
                                         Value="{x:Static local:Mode.Break}">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mode}"
                                         Value="{x:Static local:Mode.LongBreak}">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mode}"
                                         Value="{x:Static local:Mode.Work}">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Viewbox>
        <StackPanel HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Background="White"
                    Orientation="Horizontal"
                    Visibility="{qc:Binding '$P ? Visibility.Visible : Visibility.Collapsed',
                                            P={Binding IsMouseOver,
                                                       ElementName=Window}}">
            <local:ImageButton Margin="3"
                               Command="{Binding StartCommand}"
                               Image="Icons/Start.png"
                               ToolTip="Start" />
            <local:ImageButton Margin="3"
                               Command="{Binding PauseCommand}"
                               Image="Icons/Pause.png"
                               ToolTip="Pause" />
            <local:ImageButton Margin="3"
                               Command="{Binding BreakCommand}"
                               Image="Icons/ShortBreak.png"
                               ToolTip="ShortBreak" />
            <local:ImageButton Margin="3"
                               Command="{Binding LongBreakCommand}"
                               Image="Icons/LongBreak.png"
                               ToolTip="LongBreak" />
            <local:ImageButton Margin="3"
                               Command="{Binding StopCommand}"
                               Image="Icons/Stop.png"
                               ToolTip="Stop" />
            <local:ImageButton Margin="3"
                               Click="ButtonClose_Click"
                               Image="Icons/Close.png"
                               ToolTip="Stop" />
        </StackPanel>
    </Grid>
</Window>